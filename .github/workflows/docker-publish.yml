name: Docker

on:
  workflow_dispatch:
  schedule:
    - cron: "7 */12 * * *"
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
    paths-ignore:
      - 'README.md'
      - .github/workflows/**
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - .github/workflows/**
  # workflow_run:
  #   workflows: ["Check for updates"]
  #   types:
  #     - completed

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  check:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      run_jobs: ${{ steps.res.outputs.run_jobs }}
      version: ${{ steps.release_ver.outputs.tag }}

    
    steps:
      - name: Obtain latest flacon release
        id: release_ver
        run: |
          TAG=$(curl https://api.github.com/repos/flacon/flacon/releases | jq -r .[0].tag_name | cut -c2-)
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Check if tag exists
        id: tag_exists
        uses: tyriis/docker-image-tag-exists@v2.0.0
        with:
          # The container image registry
          registry: ${{ env.REGISTRY }}
          # The container image name
          respository: ${{ github.repository }}
          # The container image tag
          tag: ${{ steps.release_ver.outputs.tag }}

      - name: Return
        id: res
        run: |
          if [[${{ steps.tag_exists.outputs.tag }} != "found"]]; then
            echo "run_jobs=true" >> $GITHUB_OUTPUT
          else
            echo "run_jobs=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: [check]
    if: ${{ (needs.check.outputs.run_jobs == true) || (github.event_name != 'schedule') }}

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      # - name: Install cosign
      #   if: github.event_name != 'pull_request'
      #   uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
      #   with:
      #     cosign-release: 'v1.11.0'


      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Grab latest flacon release
        id: release_ver
        run: |
          # TAG=$(curl https://api.github.com/repos/flacon/flacon/releases | jq -r .[0].tag_name)
          TAG=v${{ needs.check.outputs.version }}
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          git clone --depth 1 --branch $TAG https://github.com/flacon/flacon.git src

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=semver,pattern={{version}},value=${{ steps.release_ver.outputs.tag }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.release_ver.outputs.tag }}
            type=semver,pattern={{major}},value=${{ steps.release_ver.outputs.tag }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build-args: FLACON_VERSION=${{ steps.flacon.outputs.release }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1
      #   if: ${{ failure() }}
      #   with:
      #     ## If no one connects after 5 minutes, shut down server.
      #     wait-timeout-minutes: 5

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      # - name: Sign the published Docker image
      #   if: ${{ github.event_name != 'pull_request' }}
      #   env:
      #     COSIGN_EXPERIMENTAL: "true"
      #   # This step uses the identity token to provision an ephemeral certificate
      #   # against the sigstore community Fulcio instance.
      #   run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
